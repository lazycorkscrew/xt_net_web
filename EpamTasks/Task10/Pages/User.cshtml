@using EpamTasks.Entities;
@using EpamTasks.PL;

@{
    Layout = null;
}

@{
    int id;


    if (int.TryParse(Request["id"], out id))
    {
        try
        {
            User user = LogicProvider.UserLogic.GetUserById(id);
            Dictionary<int, Award> awards = LogicProvider.UserLogic.GetAwards();

            <div>@user.Name</div>
            //<object data="images/users/default.jpg" type="image/jpg">
                <img src="@($"images/users/{LogicProvider.UserLogic.GetImageLocationByUserId(id)}")" />
            //</object>
                <ul>
                    @foreach (KeyValuePair<Award, int> award in user.Awards)
                    {
                        <li>@award.Key.Name, в кол-ве @award.Value шт. <a href="~/Commands/DepriveAward.cshtml?userid=@user.Id&awardid=@award.Key.id">Отнять</a></li>
                    }
                </ul>

                <form action="~/Commands/GiveAnAward.cshtml" method="post">
                    <input type="hidden" name="userId" value="@id" />
                    <select name="awardId">
                        @foreach (var award in awards)
                        {
                            <option value="@award.Key">@award.Value.Name</option>
                        }
                    </select>
                    <button>Вручить</button>
                </form>

                <form action="~/Commands/UploadImageToPlayer.cshtml?id=@id" method="post" enctype="multipart/form-data">
                    <!--<input type="hidden" name="userId" value="" />-->
                    <input type="file" name="userimage" />
                    <button>Отправить</button>
                </form>

                }
                catch (KeyNotFoundException)
                {
                @("Пользователь не найден.")
                }
                }
                else
                {
                @("Пожалуйста, не надо играться с аргументами...")
                }
                }
